// Generated by CoffeeScript 1.10.0
(function() {
  var ReplrClient, ReplrEvents, ReplrServer, ReplrWorkerPassthrough, xtend,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  xtend = require('xtend');

  ReplrServer = require('./ReplrServer');

  ReplrClient = require('./ReplrClient');

  ReplrEvents = require('./ReplrEvents');

  ReplrWorkerPassthrough = (function(superClass) {
    extend(ReplrWorkerPassthrough, superClass);

    ReplrWorkerPassthrough.prototype.forwarded = [];

    ReplrWorkerPassthrough.prototype.workerOptions = {};

    ReplrWorkerPassthrough.prototype.setup = function() {
      var forwarded;
      forwarded = ReplrWorkerPassthrough.prototype.forwarded;
      return process.on('message', function(msg, handle) {
        var options, passthrough;
        if (msg && typeof msg === 'object' && msg.type === ReplrEvents.prototype.WORKER_RECEIVE) {
          options = xtend(msg.options, ReplrWorkerPassthrough.prototype.workerOptions);
          passthrough = new ReplrWorkerPassthrough(options);
          passthrough.open(handle);
          forwarded.push(passthrough);
          return handle.on('end', function() {
            return forwarded.splice(forwarded.indexOf(passthrough), 1);
          });
        }
      });
    };

    function ReplrWorkerPassthrough(options, start) {
      if (start == null) {
        start = false;
      }
      ReplrWorkerPassthrough.__super__.constructor.call(this, options, start);
    }

    return ReplrWorkerPassthrough;

  })(ReplrServer);

  module.exports = ReplrWorkerPassthrough;

}).call(this);
